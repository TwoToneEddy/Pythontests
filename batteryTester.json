[  
   {  
      "id":"c77dc100.edd6a",
      "type":"inject",
      "z":"627e2ef7.661bac",
      "name":"",
      "props":[  
         {  
            "p":"payload"
         }
      ],
      "repeat":"",
      "crontab":"",
      "once":false,
      "onceDelay":0.1,
      "topic":"",
      "payload":"",
      "payloadType":"date",
      "x":120,
      "y":240,
      "wires":[  
         [  
            "9a5bbeb3.7d40f8"
         ]
      ]
   },
   {  
      "id":"9a5bbeb3.7d40f8",
      "type":"function",
      "z":"627e2ef7.661bac",
      "name":"Set Parameters",
      "func":"// Set user-defined parameters\nlet end_voltage = 10; \nlet max_current = 1.5; \nmsg.payload = { end_voltage, max_current };\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":320,
      "y":240,
      "wires":[  
         [  
            "6a089d6d.7ecbe8"
         ]
      ]
   },
   {  
      "id":"6a089d6d.7ecbe8",
      "type":"ui_template",
      "z":"627e2ef7.661bac",
      "group":"16dd910f.50d606",
      "name":"Battery Tester",
      "order":0,
      "width":"6",
      "height":"6",
      "format":"<div>\n  <h4>Battery Tester</h4>\n  <p>End Voltage: {{end_voltage}} V</p>\n  <p>Max Current: {{max_current}} A</p>\n  <button ng-click=\"send({payload: true})\">Start Test</button>\n\n  <p>Current: {{current}} A</p>\n  <p>Voltage: {{voltage}} V</p>\n  <p>Power: {{power}} W</p>\n  <p>Amp Hours: {{amp_hours}} Ah</p>\n  <p>Watt Hours: {{watt_hours}} Wh</p>\n</div>\n<script>\n\ngauges = [];\n\n// Set up gauges\nvar current_gauge = new JustGage({\n  id: \"current_gauge\",\n  value: 0,\n  min: 0,\n  max: 2,\n  title: \"Current (A)\"\n});\n\nvar voltage_gauge = new JustGage({\n  id: \"voltage_gauge\",\n  value: 0,\n  min: 0,\n  max: 20,\n  title: \"Voltage (V)\"\n});\n\nvar power_gauge = new JustGage({\n  id: \"power_gauge\",\n  value: 0,\n  min: 0,\n  max: 30,\n  title: \"Power (W)\"\n});\n\nvar amp_hours_gauge = new JustGage({\n  id: \"amp_hours_gauge\",\n  value: 0,\n  min: 0,\n  max: 2,\n  title: \"Amp Hours (Ah)\"\n});\n\nvar watt_hours_gauge = new JustGage({\n  id: \"watt_hours_gauge\",\n  value: 0,\n  min: 0,\n  max: 30,\n  title: \"Watt Hours (Wh)\"\n});\n\ngauges.push(current_gauge);\n\n// Get DOM elements\nvar current_element = document.querySelector('#current_gauge .js-value');\nvar voltage_element = document.querySelector('#voltage_gauge .js-value');\nvar power_element = document.querySelector('#power_gauge .js-value');\nvar amp_hours_element = document.querySelector('#amp_hours_gauge .js-value');\nvar watt_hours_element = document.querySelector('#watt_hours_gauge .js-value');\n\n// Update values every second\nsetInterval(function() {\n    current_element.innerHTML = current_gauge.config.value;\n    voltage_element.innerHTML = voltage_gauge.config.value;\n    power_element.innerHTML = power_gauge.config.value;\n    amp_hours_element.innerHTML = amp_hours_gauge.config.value;\n    watt_hours_element.innerHTML = watt_hours_gauge.config.value;\n}, 1000);\n\n// Listen for start test button\ndefineWidget(\"BatteryTester\", \"ui_widget\", {\n    onPreRender: function() {\n        this.scope.$watch('msg.payload', function(newValue, oldValue) {\n            if (newValue === true) {\n                // Start test\n                node.send({payload: true});\n            }\n        });\n    }\n});\n\n</script>\n",
      "storeOutMessages":true,
      "fwdInMessages":true,
      "templateScope":"local",
      "x":540,
      "y":240,
      "wires":[  
         [  
            "6b50a28d.23d164"
         ]
      ]
   },
   {  
      "id":"6b50a28d.23d164",
      "type":"change",
      "z":"627e2ef7.661bac",
      "name":"Set GPIO",
      "rules":[  
         {  
            "t":"set",
            "p":"payload",
            "pt":"msg",
            "to":"1",
            "tot":"str"
         },
         {  
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"gpio/27",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":720,
      "y":240,
      "wires":[  
         [  
            "4d0fd5ee.101cf8"
         ]
      ]
   },
   {  
      "id":"4d0fd5ee.101cf8",
      "type":"function",
      "z":"627e2ef7.661bac",
      "name":"Battery Test",
      "func":"let end_voltage = context.get('end_voltage') || 0;\nlet max_current = context.get('max_current') || 0;\nlet start_time = context.get('start_time') || 0;\nlet current = 0;\nlet voltage = 0;\nlet power = 0;\nlet amp_hours = 0;\nlet watt_hours = 0;\n\n// Calculate duty cycle\nlet duty_cycle = 0;\nif (current <= max_current) {\n    // Current control mode\n    duty_cycle = current / max_current;\n} else if (voltage > (end_voltage - 0.5)) {\n    // Voltage control mode\n    duty_cycle = (voltage - end_voltage) / voltage;\n}\n\n// Send PWM signal to mosfet\nmsg.payload = { cycle: duty_cycle };\nmsg.topic = 'pwm/13';\nnode.send(msg);\n\n// Get ADC values\nmsg.payload = { command: 'read', channel: 0 };\nmsg.topic = 'adc/mcp3424';\nnode.send(msg);\n\nmsg.payload = { command: 'read', channel: 1 };\nmsg.topic = 'adc/mcp3424';\nnode.send(msg);\n\n// Calculate values\nlet elapsed_time = new Date().getTime() - start_time;\ncurrent = msg.payload[1];\nvoltage = msg.payload[0];\npower = current * voltage;\namp_hours = (current * elapsed_time) / (1000 * 60 * 60);\nwatt_hours = (power * elapsed_time) / (1000 * 60 * 60);\n\n// Update context\ncontext.set('end_voltage', end_voltage);\ncontext.set('max_current', max_current);\ncontext.set('start_time', start_time);\n\n// Update UI\nmsg.ui_control = {\n    current,\n    voltage,\n    power,\n    amp_hours,\n    watt_hours\n};\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":920,
      "y":240,
      "wires":[  
         [  
            "15a9fbde.50da73"
         ],
         [  
            "70590eb.29ee6d"
         ],
         [  
            "aad42fb0.0efae"
         ],
         [  
            "f49cc7c0.5105d8"
         ]
      ]
   },
   {  
      "id":"15a9fbde.50da73",
      "type":"change",
      "z":"627e2ef7.661bac",
      "name":"Set Current Gauge",
      "rules":[  
         {  
            "t":"set",
            "p":"payload",
            "pt":"msg",
            "to":"ui_control.current",
            "tot":"msg"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":1170,
      "y":140,
      "wires":[  
         [  
            "1f9b5012.722066"
         ]
      ]
   },
   {  
      "id":"70590eb.29ee6d",
      "type":"change",
      "z":"627e2ef7.661bac",
      "name":"Set Voltage Gauge",
      "rules":[  
         {  
            "t":"set",
            "p":"payload",
            "pt":"msg",
            "to":"ui_control.voltage",
            "tot":"msg"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":1170,
      "y":200,
      "wires":[  
         [  
            "882431d2.ba7a48"
         ]
      ]
   },
   {  
      "id":"aad42fb0.0efae",
      "type":"change",
      "z":"627e2ef7.661bac",
      "name":"Set Power Gauge",
      "rules":[  
         {  
            "t":"set",
            "p":"payload",
            "pt":"msg",
            "to":"ui_control.power",
            "tot":"msg"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":1170,
      "y":260,
      "wires":[  
         [  
            "9996d8b6.ba2328"
         ]
      ]
   },
   {  
      "id":"f49cc7c0.5105d8",
      "type":"change",
      "z":"627e2ef7.661bac",
      "name":"Set Amp Hours Gauge",
      "rules":[  
         {  
            "t":"set",
            "p":"payload",
            "pt":"msg",
            "to":"ui_control.amp_hours",
            "tot":"msg"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":1210,
      "y":320,
      "wires":[  
         [  
            "e07d060d.25a54"
         ]
      ]
   },
   {  
      "id":"1f9b5012.722066",
      "type":"ui_gauge",
      "z":"627e2ef7.661bac",
      "name":"",
      "group":"16dd910f.50d606",
      "order":1,
      "width":"4",
      "height":"4",
      "gtype":"gage",
      "title":"Current (A)",
      "label":"A",
      "format":"{{value}}",
      "min":"0",
      "max":"2",
      "colors":[  
         "#00b500",
         "#e6e600",
         "#ca3838"
      ],
      "seg1":"1",
      "seg2":"1.5",
      "x":1340,
      "y":140,
      "wires":[ ]
   },
   {  
      "id":"882431d2.ba7a48",
      "type":"ui_gauge",
      "z":"627e2ef7.661bac",
      "name":"",
      "group":"16dd910f.50d606",
      "order":2,
      "width":"4",
      "height":"4",
      "gtype":"gage",
      "title":"Voltage (V)",
      "label":"V",
      "format":"{{value}}",
      "min":"0",
      "max":"20",
      "colors":[  
         "#ca3838",
         "#e6e600",
         "#00b500"
      ],
      "seg1":"10",
      "seg2":"14",
      "x":1340,
      "y":200,
      "wires":[ ]
   },
   {  
      "id":"9996d8b6.ba2328",
      "type":"ui_gauge",
      "z":"627e2ef7.661bac",
      "name":"",
      "group":"16dd910f.50d606",
      "order":3,
      "width":"4",
      "height":"4",
      "gtype":"gage",
      "title":"Power (W)",
      "label":"W",
      "format":"{{value}}",
      "min":"0",
      "max":"30",
      "colors":[  
         "#00b500",
         "#e6e600",
         "#ca3838"
      ],
      "seg1":"10",
      "seg2":"20",
      "x":1340,
      "y":260,
      "wires":[ ]
   },
   {  
      "id":"e07d060d.25a54",
      "type":"ui_gauge",
      "z":"627e2ef7.661bac",
      "name":"",
      "group":"16dd910f.50d606",
      "order":4,
      "width":"4",
      "height":"4",
      "gtype":"gage",
      "title":"Amp Hours (Ah)",
      "label":"Ah",
      "format":"{{value}}",
      "min":"0",
      "max":"2",
      "colors":[  
         "#00b500",
         "#e6e600",
         "#ca3838"
      ],
      "seg1":"1",
      "seg2":"1.5",
      "x":1340,
      "y":320,
      "wires":[ ]
   },
   {  
      "id":"16dd910f.50d606",
      "type":"ui_group",
      "name":"Battery Tester",
      "tab":"a51e757.f166db8",
      "order":4,
      "disp":true,
      "width":"12",
      "collapse":true
   },
   {  
      "id":"a51e757f.f166db8",
      "type":"ui_tab",
      "name":"Home",
      "icon":"dashboard",
      "order":1
   }
]

Please note: this is only an example, and the actual flow configuration may vary depending on the specific hardware and software setup. Always refer to the relevant documentation and user guides when working with electronic devices.